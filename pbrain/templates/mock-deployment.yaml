{{ if .Values.mock.enabled -}}

apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "pbrain.fullname" . }}-mock
  labels:
    app: {{ template "pbrain.name" . }}
    chart: {{ template "pbrain.chart" . }}
    release: {{ .Release.Name | quote}}
    heritage: {{ .Release.Service | quote }}
    component: mock
spec:
  replicas: {{ .Values.mock.replicas }}
  selector:
    matchLabels:
      app: {{ template "pbrain.name" . }}
      release: {{ .Release.Name }}
      component: mock
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "pbrain.name" . }}
        release: {{ .Release.Name | quote}}
        component: mock
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.mock.image.repository }}:{{ .Values.mock.image.tag }}"
          imagePullPolicy: {{ .Values.mock.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          resources:
{{ toYaml .Values.mock.resources | indent 12 }}
          livenessProbe:
            httpGet:
              path: /healthy
              port: http
          readinessProbe:
            httpGet:
              path: /healthy
              port: http
          env:

{{ end }}
